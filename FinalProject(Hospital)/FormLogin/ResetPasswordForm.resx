<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /OLnVwAAAABJRU5ErkJggg==
</value>
  </data>
</root>